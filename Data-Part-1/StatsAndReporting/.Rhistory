head(cars)
reg_model<-lm(cars$dist~cars$speed)
str(reg_model)
summary(reg_model)
reg_model[1]
Income<- c(5500, 6700, 8970, 5634)
Tax<-0.2
Year<-2015
Company<-"DataVedi"
Net_income<- Income*(1-Tax)
Emp_name<-c("Redd", "Kenn", "Finn", "Scott")
Emp_database<-data.frame(Net_income, Emp_name)
Emp_db_list<-list(Income,Tax, Year, Company, Emp_database)
Emp_db_list
Emp_database
print(Emp_database)
library(readr)
Sales_sample <- read_csv("~/Books/StInfer/R/data/02-Data-Handling/DataHandling/Superstore Sales Data/Sales_sample.csv")
View(Sales_sample)
Print(Sales_sample)
print(Sales_sample)
summary(Sales_sample)
str(Sales_sample)
library(xlsx)
dim(Sales_sample)
head(Sales_sample)
names(Sales_sample)
head(Sales_sample, n=10)
str(Sales_sample)
class(Sales_sample)
is.data.frame(Sales_sample)
Sales_sample[1,]
Sales_sample[c(1,2,3),]
names(Sales_sample)
Sales_sample["custId", ]
Sales_sample[, "custId"]
Sales_sample[, c("custId","productSold")]
names(Sales_sample)
Sales_sample[, c(1,4)]
subset(Sales_sample, (salesChannel="Retail"))
subset(Sales_sample, (salesChannel=="Retail"))
subset(Sales_sample, (salesChannel=="Retail"))[,"SalesChannel"]
subset(Sales_sample, (salesChannel=="Retail"))["SalesChannel",]
subset(Sales_sample, (salesChannel=="Retail"))[,"salesChannel"]
cars
plot(cars)
mean(cars$speed)
median(cars$speed)
mode(cars$speed)
md
help(mode)
help(mean)
rabbitLateness <- c(40, 30, 20, 45, 60, 120, 35, 40,50, 55, 53, 22, 27, 48, 62, 33, 35, 40 ,45)
range(rabbitLateness)
quantile(rabbitLateness)
seq(range(rabbitLateness), by=10)
seq(20,130, by=10)
bins = seq(20,130, by=10)
cut(rabbitLateness, bins, right=FALSE)
intervals <- cut(rabbitLateness, bins, right=FALSE)
table(intervals)
view(intervals)
View
View(intervals)
plot(table(intervals), type="h")
plot(table(intervals), type="h", xlab="Intervals", ylab="Frequency")
hist(rabbitLateness,breaks = bins)
plot(table(intervals), type="h", xlab="Intervals", ylab="Frequency")
hist(rabbitLateness,breaks = bins)
min(rabbitLateness)
max(rabbitLateness)
rabbitLateness
range(rabbitLateness)
intervals <- cut(rabbitLateness, bins, right=FALSE)
intervals
str(intervals)
intervals[1]
Age <- c(15, 17, 16, 15, 16)
English<- c(40, 56, 30, 68, 35)
Science<- c(85, 80, 74, 39, 65)
Name<- c("John", "Bob", "Kevin", "Smith", "Rick")
Students <- data.frame(Name, Age, English, Science)
Profile = c(Students$Name, Students$Age)
Profile
Profile = data.frame(Students$Name, Students$Age)
Profile
names(Profiles)
names(Profile)
names(Profiles)[1] = "Name"
names(Profile)[1] = "Name"
names(Profile)[2] = "Age"
Profile
1 + 1
no1 <- 1
no2 <- 1
result <- no1 + no2
result
nos1 = c(1,3,5,7)
nos2 = c(2,4,6,8)
result = nos1 + nos2
result
length(result)
nos1 * nos2
n <- 1
class(n)
class("John")
class(TRUE)
class("10-Mar-2017")
class(10-Mar-2017)
class(10/03/1977)
as.Date("10/12/2017")
is.numeric(1)
nos1
str(nos1)
nos1 * 3
nos1 + 3
nos1[1]
nos1[2]
nos1[2:3]
nos1[2:4]
result <- nos1 * 3
nos1 <- nos1 * 3
nos1[4] <- 100
nos1
message(nos1, nos2)
summary(nos1)
nos1
names <- c("John", "Mike", "George", "Magesh")
age <- c(15,16,15,17)
english <- c(60,40,70,55)
science <- (90,50,65,40)
science <- c(90,50,65,40)
students <- data.frame(names, age, english, science)
students
class(students)
is.data.frame(students)
newStudents <- students
newStudents[1]
newStudents[,1]
newStudents$names
newStudents$names[1]
newStudents$names[1] = "Trump"
newStudents$names[1] <- "Trump"
newStudents$names
students <- data.frame(names, age, english, science)
str(students)
students[1]
students$names
students[2]
students$age
profiles <- data.frame(students$names, students$age)
profiles
names(students)
class(names(students))
is.vector(names(students))
students$age
students[,2]
students[2,]
students[2:4,]
students[c(2,4),]
desc <- 'This is a simple list'
names <- c("John", "Mike", "George", "Magesh")
age <- c(15,16,15,17)
profiles <- data.frame(names, age)
mylist <- list(desc, names, age, profiles)
mylist
mylist[1]
names(mylist)
mylist
gender <- factor("Male", "Female")
str(gender)
gender <- factor("Female","Male")
gender
help(factor)
gender <- factor(c("Female","Male"))
gender
str(gender)
data()
cars
names(cars)
head(cars)
tail(cars)
library(readr)
Sales_by_country <- read_csv("~/Desktop/R & MachineLearning/Data-Part-1/DataHandling/Sales_by_country_v1.csv")
View(Sales_by_country)
str(Sales_by_country)
dim(Sales_by_country)
str(Sales_by_country)
help(tbl_df)
help(tbl)
tbl
rm(Sales_by_country)
profiles
View(profiles)
rm(profiles)
profiles
library(readr)
Sales_by_country <- read_csv("~/Desktop/R & MachineLearning/Data-Part-1/DataHandling/Sales_by_country_v1.csv")
View(Sales_by_country_v1)
library(readr)
Sales_by_country <- read_csv("~/Desktop/R & MachineLearning/Data-Part-1/DataHandling/Sales_by_country_v1.csv")
View(Sales_by_country)
Sales_by_country[1,]
Sales_by_country[,1]
Sales_by_country[1:20,]
Sales_by_country[, c("custName", "custCountry")]
Sales_by_country
Sales_by_country[,-1]
Sales_by_country[,c("-custName")]
Sales_by_country[,c("custName")]
retail_customers <- subset(Sales_by_country, salesChannel == "Retail")
retail_customers
View(retail_customers)
albania_retail_customers = subset(Sales_by_country, salesChannel=="Retail" & custCountry=="Albania")
View(albania_retail_customers)
albania_or_retail_customers = subset(Sales_by_country, salesChannel=="Retail" | custCountry=="Albania")
View(albania_or_retail_customers)
albania_or_retail_customers = subset(Sales_by_country, salesChannel=="Retail" | custCountry=="Albania", select=c(custName, custCountry, salesChannel, unitsSold))
albania_or_retail_customers = subset(Sales_by_country, salesChannel=="Retail" | custCountry=="Albania", select=c(-custName, -custCountry, -salesChannel, -unitsSold))
seq(10:200, step=5)
seq(10,200, step=5)
prices = seq(10,200, step=5)
prices = seq(10,200)
str(prices)
help("seq")
profiles <- data.frame(names, age)
cities <- c("Singapore", "Hong Kong", "Beijing", "Bangalore")
View(profiles)
profiles$city <- cities
names(profiles)
help("seq")
seq(from=2, to=200, by=3)
seq(from=2, length.out=100, by=3)
length(Sales_by_country)
length(Sales_by_country$custId)
price <- seq(from=2, by=3, length.out = length(Sales_by_country$custId))
Sales_by_country$unitCost <- price
View(Sales_by_country)
Sales_by_country$salesValue <- Sales_by_country$unitsSold * Sales_by_country$unitCost
View(Sales_by_country)
names(Sales_by_country)
length(names(Sales_by_country))
names(Sales_by_country)[9] <- "prodValue"
View(Sales_by_country)
mylist
profiles
help("ifelse")
profiles$salary <- ifelse(profiles$age <= 15, 10000, 20000)
View(profiles)
View(Sales_by_country)
Sales_by_country$discount <- ifelse(Sales_by_country$salesChannel === "Retail", 10, ifelse(Sales_by_country$salesChannel == "Online", 12, 15))
Sales_by_country$discount <- ifelse(Sales_by_country$salesChannel == "Retail", 10, ifelse(Sales_by_country$salesChannel == "Online", 12, 15))
View(Sales_by_country)
Sales_by_country$discountedValue <- Sales_by_country$prodValue * ((100-Sales_bycounter$discount)/100)
Sales_by_country$discountedValue <- Sales_by_country$prodValue * ((100-Sales_by_country$discount)/100)
View(Sales_by_country)
Sales_by_country[order(Sales_by_country$unitsSold), ]
Sales_by_country[order(-Sales_by_country$unitsSold), ]
x <- Sales_by_country[order(-Sales_by_country$unitsSold), ]
View(x)
x <- Sales_by_country[order(Sales_by_country$salesChannel, Sales_by_country$unitsSold), ]
library(readr)
Bill <- read_csv("~/Desktop/R & MachineLearning/Data-Part-1/DataHandling/Bill.csv")
View(Bill)
usedcars
mtcars
data(mtcars)
summary(mtcars)
help('duplicated')
help('setwd')
getwd()
setwd('/Users/tkmagesh/Desktop/R & MachineLearning')
setwd("//Users//tkmagesh//Desktop//R & MachineLearning")
getwd()
setwd("~/Desktop/R & MachineLearning/Data-Part-1/DataHandling")
library(readr)
Bill <- read_csv("Bill.csv")
View(Bill)
duplicate_bills <- duplicated(Bills)
duplicate_bills <- duplicated(Bill)
length(duplicate_bills)
head(duplicate_bills)
summary(duplicate_bills)
length(Bill)
lengths(Bill)
duplicate_bills_by_cust_id <- duplicated(Bill$cust_id)
summary(duplicate_bills_by_cust_id)
duplicate_bills <- Bill[duplicate_bills_by_cust_id]
duplicate_bills <- Bill[duplicate_bills_by_cust_id,]
view(duplicate_bills)
View(duplicate_bills)
unique_bils <- Bill[!duplicate_bills_by_cust_id]
unique_bils <- Bill[!duplicate_bills_by_cust_id, ]
lengths(unique_bills)
lengths(unique_bils)
lengths(duplicate_bills)
nrow(duplicate_bills)
nrow(Bill)
library(readr)
orders <- read_csv("~/Desktop/R & MachineLearning/Data-Part-1/DataHandling/orders.csv")
View(orders)
library(readr)
slots <- read_csv("~/Desktop/R & MachineLearning/Data-Part-1/DataHandling/slots.csv")
View(slots)
head(orders)
head(slots)
unique(orders$Unique_id)
x <- unique(orders$Unique_id)
x
summary(x)
nrows(orders)
nrow(orders)
duplicate_ids <- duplicated(orders$Unique_id)
nrow(duplicate_ids)
nrow(orders[duplicate_ids,])
orders[duplicate_ids,]
Order_Slot <- merge(orders, slots, by="Unique_id", all=FALSE)
view(Order_Slot)
View(Order_Slot)
help(merge)
write.csv(Order_Slot, "order_slot.csv")
setwd("~/Desktop/R & MachineLearning/Data-Part-1/DataHandling")
setwd("~/Desktop/R & MachineLearning/Data-Part-1/StatsAndReporting")
library(readr)
Income_data <- read_csv("~/Desktop/R & MachineLearning/Data-Part-1/StatsAndReporting/Income_data.csv")
View(Income_data)
library(readr)
Sporting_goods_sales <- read_csv("~/Desktop/R & MachineLearning/Data-Part-1/StatsAndReporting/Sporting_goods_sales.csv")
View(Sporting_goods_sales)
library(readr)
Online_Retail <- read_csv("~/Desktop/R & MachineLearning/Data-Part-1/StatsAndReporting/Online Retail.csv")
View(Online_Retail)
mean(Online_Retail$Quantity)
median(Online_Retail$Quantity)
Online_Retail[(Online_Retail$Quantity > 9),]
mean(Online_Retail$UnitPrice)
median(Online_Retail$UnitPrice)
var(Online_Retail$UnitPrice)
sd(Online_Retail$UnitPrice)
summary(Online_Retail$UnitPrice)
Online_Retail_Filtered <- subset(Online_Retail, (Quantity > 0 & UnitPrice > 0))
View(Online_Retail_Filtered)
range(Online_Retail_Filtered)
View(Online_Retail_Filtered$UnitPrice)
range(Online_Retail_Filtered$UnitPrice)
mean(Online_Retail_Filtered$UnitPrice)
median(Online_Retail_Filtered$UnitPrice)
summary(Online_Retail_Filtered$UnitPrice)
quantile(Online_Retail_Filtered$UnitPrice)
boxplot(Online_Retail_Filtered$UnitPrice)
range(Online_Retail_Filtered$Quntity)
range(Online_Retail_Filtered$Quantity)
boxplot(Online_Retail_Filtered$Quantity)
Online_Retail_Filtered <- subset(Online_Retail, (Quantity > 0 & UnitPrice < 2000))
boxplot(Online_Retail_Filtered$UnitPrice)
Online_Retail_Filtered <- subset(Online_Retail, (Quantity > 0 & (UnitPrice < 2000 & UnitPrice > 0)))
boxplot(Online_Retail_Filtered$UnitPrice)
Quantile(Online_Retail_Filtered$UnitPrice)
Quartile(Online_Retail_Filtered$UnitPrice)
quantile(Online_Retail_Filtered$UnitPrice)
quartiles <- quantile(Online_Retail_Filtered$UnitPrice)
str(quartiles)
quartiles[4]
quartiles["75%"]
subset(Online_Retail_Filtered, UnitPrice > quartiles["75%"])
q4Orders <- subset(Online_Retail_Filtered, UnitPrice > quartiles["75%"])
View(q4Orders)
library(readr)
bank_market <- read_csv("~/Desktop/R & MachineLearning/Data-Part-1/StatsAndReporting/bank_market.csv")
View(bank_market)
boxplot(bank_market$balance)
quantile(bank_market$balance, c(0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1))
help('boxplot')
data()
cars
scatter(cars$speed, cars$dist)
scatter.smooth(cars$speed, cars$dist)
help('scatter')
help('scatter.smooth')
scatter.smooth(cars$speed, cars$dist, xlab="Speed", ylab="Distance")
table(cars$speed)
plot(cars$speed, cars$dist)
plot(cars$speed, cars$dist, xlab="Speed", ylab="Distance" main="Speed Vs Distance")
plot(cars$speed, cars$dist, xlab="Speed", ylab="Distance", main="Speed Vs Distance")
mtcars
mtcars
View(mtcars)
help(table)
b <- factor(rep(c("A","B","C"), 10))
table(b)
x = table(b)
str(x)
table["A"]
table[1]
library(readr)
auto_data <- read_csv("~/Downloads/v2-Resources/auto-miles-per-gallon.csv")
View(auto_data)
summary(auto_data)
str(auto_data)
auto_data$HORSEPOWER <- as.numeric(auto_data$HORSEPOWER)
auto_data$HORSEPOWER[is.na(auto_data$HORSEPOWER)] <- mean(auto_data$HORSEPOWER, na.rm=TRUE)
summary(auto_data)
install.packages("ggplot2")
library('ggplot2')
ggplot(auto_data, aes(factor(CYLINDERS), MPG)) + geom_boxplot( aes(fill=factor(CYLINDERS)))
install.packages('psych')
pairs.panels(auto_data)
library(psych)
pairs.panels(auto_data)
iris
pairs.panels(iris)
iris_df <- iris
summary(iris_df)
cor(iris_df[,1:4])
cor(iris_df[,1:4])
help('cor')
View(iris_df)
iris_df$Species <- as.numeric(iris_df$Species)
iris_model <- lm(Species ~ . , iris_df)
summary(iris_model)
par(mfrow=c(1,1))
stripchart(iris$Sepal.Width)
hist(iris$Sepal.Width)
hist(iris$Sepal.Width, col="cyan",
main="Sepal Width", xlab="Dist of width", ylab="Sample Count")
boxplot(iris$Sepal.Width)
boxplot(iris$Sepal.Width ~ iris$Species, col="green")
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$Species)
plot(iris$Sepal.Length,  type="l")
plot(sort(iris$Sepal.Length), type="l")
irisagg <- aggregate(iris[,1:4], by=list(iris$Species), FUN="mean" )
irisagg
barplot(irisagg$Sepal.Length, names.arg=irisagg$Group.1,
legend.text=irisagg$Group.1, col=irisagg$Group.1)
data()
View(iris)
iris_df <- iris
str(iris_df)
summary(iris_df)
stripchart(iris$Sepal.Width)
hist(iris$Sepal.Width)
hist(iris$Sepal.Width, col="cyan",
main="Sepal Width", xlab="Dist of width", ylab="Sample Count")
boxplot(iris$Sepal.Width)
summary(iris$Sepal.Width)
str(iris)
iris_df$Species <- as.numeric(iris_df$Species)
View(iris_df)
boxplot(iris_df$Sepal.Width ~ iris_df$Species)
boxplot(iris_df$Sepal.Width ~ iris_df$Species, col=iris_df$Species)
boxplot(iris_df$Sepal.Width ~ iris_df$Species, col="green")
plot(iris$Sepal.Length, iris$Sepal.Width)
plot(iris$Sepal.Length, iris$Sepal.Width, col=iris$Species)
plot(iris$Sepal.Length, type="l")
plot(sort(iris$Sepal.Length), type="l")
irisagg <- aggregate(iris[1:4], by=list(iris$Species), FUN=mean)
irisagg
barplot(irisagg$Sepal.Length, names.arg = irisagg$Group.1, legend.text = irisagg$Group.1, col = irisagg$Group.1)
installed.packages('ggplot2')
View(mtcars)
ggplot(data = mtcars, aes=(x=mpg, y=wt)) + geom_line()
ggplot(data = mtcars, aes(x=mpg, y=wt)) + geom_line()
ggplot(data = mtcars, aes(x=cyl)) + geom_histogram(binwidth = 1, color="green") + theme_bw()
x = ggplot(data = mtcars, aes(x=cyl))
str(x)
ggplot(data = mtcars, aes(x=cyl)) + geom_histogram(binwidth = 1, color="green") + theme_classic()
ggplot(mtcars, aes(x=cyl)) + geom_density()
ggplot(mtcars, aes(x=factor(cyl), y=mpg, color=factory(cyl)) + geom_boxplot() + labs(title = "Box Plot", x = "# of Cylinders", y="Miles Per Gallon")
""
ggplot(mtcars, aes(x=factor(cyl), y=mpg, color=factor(cyl))) + geom_boxplot() + labs(title = "Box Plot", x = "# of Cylinders", y="Miles Per Gallon")
#Scatter plot
ggplot(mtcars, aes(x=mpt, y=wt, color=as.factor(cyl), shapte=as.factor(gear), label=as.character(rownames(mtcars)))) + geom_point(size=6) + geom_text(size=3, color="black")
ggplot(mtcars, aes(x=mpg, y=wt, color=as.factor(cyl), shapte=as.factor(gear), label=as.character(rownames(mtcars)))) + geom_point(size=6) + geom_text(size=3, color="black")
ggplot(mtcars, aes(x=mpg, y=wt, color=as.factor(cyl), shape=as.factor(gear), label=as.character(rownames(mtcars)))) + geom_point(size=6) + geom_text(size=3, color="black")
ggplot(mtcars, aes(x=factor(1), fill=factor(cyl))) + geom_bar(width = 1) + coord_polar(theta="y")
#Faceting
ggplot(mtcars, aes(x=hp, y=mpg, color=factor(am))) + geom_point() + facet_grid(cyz ~ gear) + theme_bw()
ggplot(mtcars, aes(x=hp, y=mpg, color=factor(am))) + geom_point() + facet_grid(cyl ~ gear) + theme_bw()
help(mtcars)
installed.packages("graphics", "grDevices")
installed.packages("graphics")
installed.packages("grDevices")
library(graphics)
library(grDevices)
heatmap(as.matrix(mtcars), Rowv = NA, Colv = NA, scale = "coloum", main = "heatmap")
heatmap(as.matrix(mtcars), Rowv = NA, Colv = NA, scale = "column", main = "heatmap")
install.packages("ltm")
library("ltm")
help("biserial")
help("biserial.cor")
LSAT
help(LSAT)
str(LSAT)
install.packages("ggmap")
library(ggmap)
indiamap <- qmap("India", zoom=5, legend="bottom")
install.packages("GeomRasterAnn")
indiamap
install.packages("ggmap")
install.packages("ggmap")
indiamap <- qmap("India", zoom=5, legend="bottom")
indiamap <- gmap("India", zoom=5, legend="bottom")
library(ggmap)
indiamap <- qmap("India", zoom=5, legend="bottom")
install.packages("ggmap")
install.packages("ggmap")
library(ggmap)
indiamap <- qmap("India", zoom=5, legend="bottom")
indiamap <- qmap("India", zoom=5)
indiamap
qmap("India", zoom=5)
